name: CI

on:
  - push
  - workflow_dispatch

jobs:
  install:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3

      - name: Install pnpm
        run: corepack enable

      - name: Cache pnpm and node-modules
        uses: Icalinguaplusplus/node-pm-action@master
        with:
          node-modules: ./node_modules
          package-manager: pnpm

      - name: pnpm install
        run: pnpm install

  pack-bridge-js:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: icalingua-bridge-oicq

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3

      - name: Install pnpm
        run: corepack enable

      - name: Cache pnpm and node-modules
        uses: Icalinguaplusplus/node-pm-action@master
        with:
          node-modules: ./node_modules
          package-manager: pnpm

      - name: pnpm install
        run: pnpm install

      - name: Compile
        run: pnpm compile

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bridge-oicq
          path: icalingua-bridge-oicq/build/
          if-no-files-found: error

  build-windows-x64:
    runs-on: windows-2019
    outputs:
      version: ${{ steps.git-ver.outputs.version }}
      arch-version: ${{ steps.version.outputs.arch-version }}
      pkg-name: ${{ steps.version.outputs.pkg-name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install pnpm
        run: corepack enable

      - name: pnpm install
        run: pnpm install

      - name: Get version tag
        id: git-ver
        run: echo "version=$(git describe --tags | sed 's/v//')" >> $env:GITHUB_OUTPUT

      - name: Write version info
        run: node .github/check-version.js
        id: version
        env:
          SHA: ${{ github.sha }}
          REF: ${{ github.REF }}
          GIT_VER: ${{ steps.git-ver.outputs.version }}

      - name: Build
        run: pnpm build
        working-directory: icalingua

      - name: Rename
        run: ../../.github/winrename.bat x64
        working-directory: icalingua/build

      - uses: actions/upload-artifact@v3
        name: Upload artifact
        with:
          name: Icalingua_Windows64.exe
          path: icalingua/build/Icalingua++*.exe
          if-no-files-found: error

  install-macos-x64:
    runs-on: macos-11
    defaults:
      run:
        working-directory: icalingua

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install pnpm
        run: corepack enable

      - name: Cache pnpm and node-modules
        uses: Icalinguaplusplus/node-pm-action@master
        with:
          node-modules: ./node_modules
          package-manager: pnpm

      - name: pnpm install
        run: pnpm install

  build-macos-x64:
    runs-on: macos-11
    needs: install-macos-x64
    outputs:
      version: ${{ steps.git-ver.outputs.version }}
      arch-version: ${{ steps.version.outputs.arch-version }}
      pkg-name: ${{ steps.version.outputs.pkg-name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install pnpm
        run: corepack enable

      - name: Cache pnpm and node-modules
        uses: Icalinguaplusplus/node-pm-action@master
        with:
          node-modules: ./node_modules
          package-manager: pnpm

      - name: pnpm install
        run: pnpm install

      - name: Get version tag
        id: git-ver
        run: echo "version=$(git describe --tags | sed "s/v//")" >> $GITHUB_OUTPUT

      - name: Write version info
        run: node .github/check-version.js
        id: version
        env:
          SHA: ${{ github.sha }}
          REF: ${{ github.REF }}
          GIT_VER: ${{ steps.git-ver.outputs.version }}

      - name: Build
        run: pnpm build
        working-directory: icalingua

      - name: Rename
        run: for i in *.dmg;do mv "$i" "${i%.dmg}_x64.dmg" ;done
        working-directory: icalingua/build

      - uses: actions/upload-artifact@v3
        name: Upload artifact
        with:
          name: Icalingua++_x64.dmg
          path: icalingua/build/Icalingua++*.dmg
          if-no-files-found: error

  release:
    runs-on: ubuntu-20.04
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs:
      - build-windows-x64
      - build-macos-x64
    steps:
      - name: Make dir
        run: mkdir release

      - name: Get Icalingua_Windows64.exe
        uses: actions/download-artifact@v3
        with:
          name: Icalingua_Windows64.exe
          path: release

      - name: Get Icalingua++_x64.dmg
        uses: actions/download-artifact@v3
        with:
          name: Icalingua++_x64.dmg
          path: release

      - name: Release
        uses: fnkr/github-action-ghr@ghr-options
        env:
          GHR_PATH: release/
          GITHUB_TOKEN: ${{ github.token }}
          GHR_REPLACE: true
          GHR_TITLE: ${{ needs.build-dist-bundle.outputs.version }}
          GHR_DRAFT: true
